services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_KRAFT_CLUSTER_ID=$(uuidgen)
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,EXTERNAL://kafka:9094
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=1
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
    ports:
      - "9092:9092"
      - "9094:9094"
    healthcheck:
      test: [ "CMD-SHELL", "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --list" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  flink-jobmanager:
    image: flink:latest
    container_name: flink-jobmanager
    command: jobmanager
    environment:
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: flink-jobmanager
    ports:
      - "8081:8081"

  flink-taskmanager:
    image: flink:latest
    container_name: flink-taskmanager
    command: taskmanager
    environment:
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: flink-jobmanager
    depends_on:
      - flink-jobmanager

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fraud_detection
    ports:
      - "5432:5432"

  adminer:
    image: adminer:4.8.1
    ports:
      - "8091:8080"
    depends_on:
      - postgres

  kafdrop:
    image: obsidiandynamics/kafdrop:3.28.0
    ports:
      - "9001:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9094"
    depends_on:
      kafka:
        condition: service_healthy

  flink-sql-client:
    image: flink:latest
    container_name: flink-sql-client
    depends_on:
      - flink-jobmanager
    entrypoint: [ "/bin/sh", "-c", "flink sql-client" ]
